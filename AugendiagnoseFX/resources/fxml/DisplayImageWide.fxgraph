package fxml

import de.eisfeldj.augendiagnosefx.controller.DisplayImageController
import de.eisfeldj.augendiagnosefx.fxelements.OverlayImageView
import javafx.scene.control.Button
import javafx.scene.control.ColorPicker
import javafx.scene.control.ContextMenu
import javafx.scene.control.Label
import javafx.scene.control.MenuItem
import javafx.scene.control.Separator
import javafx.scene.control.Slider
import javafx.scene.control.TextArea
import javafx.scene.control.ToggleButton
import javafx.scene.control.ToggleGroup
import javafx.scene.image.Image
import javafx.scene.image.ImageView
import javafx.scene.layout.ColumnConstraints
import javafx.scene.layout.GridPane
import javafx.scene.layout.RowConstraints
import javafx.scene.layout.VBox

component DisplayImage controlledby DisplayImageController resourcefile "../bundles/Strings.properties" styledwith "../css/application.css" {
	define ToggleGroup id overlayGroup
	GridPane id displayImage {
		styleClass : "displayImage",
		alignment : "CENTER",

		columnConstraints : [
			ColumnConstraints {
				hgrow : "SOMETIMES"
			},
			ColumnConstraints id overlayConstraints {
				hgrow : "NEVER",
				minWidth : 75
			},
			ColumnConstraints id commentConstraints {
				hgrow : "SOMETIMES",
				percentWidth : 20
			}
		],
		rowConstraints : [
			RowConstraints {
				vgrow : "SOMETIMES"
			}
		],
		OverlayImageView id displayImageView {
			static columnIndex : 0,
			static rowIndex : 0,
			static halignment : "CENTER",
			static valignment : "CENTER",
			static vgrow : "SOMETIMES",
			contextMenu : ContextMenu {
				items: [
					MenuItem {
						text : rstring "menu_store_brightness",
						onAction : controllermethod storeBrightnessContrast
					},
					MenuItem {
						text : rstring "menu_reset_brightness",
						onAction : controllermethod resetBrightnessContrast
					},
					MenuItem {
						text : rstring "menu_store_position",
						onAction : controllermethod storeViewPosition
					},
					MenuItem {
						text : rstring "menu_reset_position",
						onAction : controllermethod resetViewPosition
					}
				]
			}
		},
		GridPane id overlayPane {
			static columnIndex : 1,
			static rowIndex : 0,
			vgap : 5,
			VBox {
				static columnIndex : 0,
				static rowIndex : 0,
				static columnSpan : 2,
				visible : true,
				managed : true,
				Label {
					styleClass : "labelPanes",
					text : rstring "label_overlays"
				},
				ToggleButton id btnOverlayCircle {
					text : rstring "button_overlay_circle",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				Separator,
				ToggleButton id btnOverlay1 {
					text : rstring "button_overlay_1",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id btnOverlay2 {
					text : rstring "button_overlay_2",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id btnOverlay3 {
					text : rstring "button_overlay_3",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id btnOverlay4 {
					text : rstring "button_overlay_4",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id btnOverlay5 {
					text : rstring "button_overlay_5",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id btnOverlay6 {
					text : rstring "button_overlay_6",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id btnOverlay7 {
					text : rstring "button_overlay_7",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				Separator,
				ColorPicker id colorPicker {
					maxWidth : const Double#MAX_VALUE,
					onAction : controllermethod onColorChanged
				}
			},
			Slider id sliderBrightness {
				static columnIndex : 0,
				static rowIndex : 1,
				static halignment : "CENTER",
				static vgrow : "SOMETIMES",
				static hgrow : "SOMETIMES",
				orientation : "VERTICAL"
			},
			Slider id sliderContrast {
				static columnIndex : 1,
				static rowIndex : 1,
				static halignment : "CENTER",
				static vgrow : "SOMETIMES",
				static hgrow : "SOMETIMES",
				orientation : "VERTICAL"
			},
			ImageView {
				static columnIndex : 0,
				static rowIndex : 2,
				static halignment : "CENTER",
				image : Image {
					url : location "img/brightness.png"
				}
			},
			ImageView {
				static columnIndex : 1,
				static rowIndex : 2,
				static halignment : "CENTER",
				image : Image {
					url : location "img/contrast.png"
				}
			}
		},
		GridPane id commentPane {
			static columnIndex : 2,
			static rowIndex : 0,
			visible : true,
			managed : true,
			Label {
				static columnIndex : 0,
				static rowIndex : 0,
				styleClass : "labelPanes",
				text : rstring "label_comment"
			},
			TextArea id txtImageComment {
				static columnIndex : 0,
				static rowIndex : 1,
				static vgrow : "SOMETIMES",
				promptText : rstring "hint_edit_comment",
				editable : false,
				wrapText : true
			},
			ToggleButton id btnEditComment {
				static columnIndex : 0,
				static rowIndex : 2,
				text : rstring "button_edit_comment",
				selected : false,
				alignment : "BOTTOM_CENTER",
				onAction : controllermethod btnEditCommentPressed,
				maxWidth : const Double#MAX_VALUE
			}
		}
	}
}
